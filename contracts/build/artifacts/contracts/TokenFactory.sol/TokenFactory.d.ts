// This file was autogenerated by hardhat-viem, do not edit it.
// prettier-ignore
// tslint:disable
// eslint-disable

import type { Address } from "viem";
import type { AbiParameterToPrimitiveType, GetContractReturnType } from "@nomicfoundation/hardhat-viem/types";
import "@nomicfoundation/hardhat-viem/types";

export interface TokenFactory$Type {
  "_format": "hh-sol-artifact-1",
  "contractName": "TokenFactory",
  "sourceName": "contracts/TokenFactory.sol",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "_master",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "ERC1167FailedCreateClone",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "creator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "TokenCreated",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "salt",
          "type": "bytes32"
        }
      ],
      "name": "contractAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "__name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "__symbol",
          "type": "string"
        },
        {
          "internalType": "bytes32",
          "name": "salt",
          "type": "bytes32"
        }
      ],
      "name": "create",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "proxy",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "0x608060405234801561001057600080fd5b5060405161048038038061048083398101604081905261002f91610054565b600080546001600160a01b0319166001600160a01b0392909216919091179055610084565b60006020828403121561006657600080fd5b81516001600160a01b038116811461007d57600080fd5b9392505050565b6103ed806100936000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806330f990cb1461003b578063593502921461006a575b600080fd5b61004e6100493660046102bd565b61007d565b6040516001600160a01b03909116815260200160405180910390f35b61004e61007836600461032a565b610140565b60008054610094906001600160a01b0316836101ac565b604051631c0a451360e21b81529091506001600160a01b03821690637029144c906100c59087908790600401610389565b600060405180830381600087803b1580156100df57600080fd5b505af11580156100f3573d6000803e3d6000fd5b5050604080513381526001600160a01b03851660208201527fd5f9bdf12adf29dab0248c349842c3822d53ae2bb4f36352f301630d018c8139935001905060405180910390a19392505050565b600080546040513060388201526f5af43d82803e903d91602b57fd5bf3ff60248201526001600160a01b039091166014820152733d602d80600a3d3981f3363d3d373d3d3d363d738152605881018390526037600c820120607882015260556043909101205b92915050565b6000763d602d80600a3d3981f3363d3d373d3d3d363d730000008360601b60e81c176000526e5af43d82803e903d91602b57fd5bf38360781b1760205281603760096000f590506001600160a01b0381166101a6576040516330be1a3d60e21b815260040160405180910390fd5b634e487b7160e01b600052604160045260246000fd5b600082601f83011261024157600080fd5b813567ffffffffffffffff8082111561025c5761025c61021a565b604051601f8301601f19908116603f011681019082821181831017156102845761028461021a565b8160405283815286602085880101111561029d57600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000806000606084860312156102d257600080fd5b833567ffffffffffffffff808211156102ea57600080fd5b6102f687838801610230565b9450602086013591508082111561030c57600080fd5b5061031986828701610230565b925050604084013590509250925092565b60006020828403121561033c57600080fd5b5035919050565b6000815180845260005b818110156103695760208185018101518683018201520161034d565b506000602082860101526020601f19601f83011685010191505092915050565b60408152600061039c6040830185610343565b82810360208401526103ae8185610343565b9594505050505056fea264697066735822122068f81e6d8ca922bcf264733bd5a96e5a05a605f4e6b29cac81fa17df46628c0264736f6c63430008140033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100365760003560e01c806330f990cb1461003b578063593502921461006a575b600080fd5b61004e6100493660046102bd565b61007d565b6040516001600160a01b03909116815260200160405180910390f35b61004e61007836600461032a565b610140565b60008054610094906001600160a01b0316836101ac565b604051631c0a451360e21b81529091506001600160a01b03821690637029144c906100c59087908790600401610389565b600060405180830381600087803b1580156100df57600080fd5b505af11580156100f3573d6000803e3d6000fd5b5050604080513381526001600160a01b03851660208201527fd5f9bdf12adf29dab0248c349842c3822d53ae2bb4f36352f301630d018c8139935001905060405180910390a19392505050565b600080546040513060388201526f5af43d82803e903d91602b57fd5bf3ff60248201526001600160a01b039091166014820152733d602d80600a3d3981f3363d3d373d3d3d363d738152605881018390526037600c820120607882015260556043909101205b92915050565b6000763d602d80600a3d3981f3363d3d373d3d3d363d730000008360601b60e81c176000526e5af43d82803e903d91602b57fd5bf38360781b1760205281603760096000f590506001600160a01b0381166101a6576040516330be1a3d60e21b815260040160405180910390fd5b634e487b7160e01b600052604160045260246000fd5b600082601f83011261024157600080fd5b813567ffffffffffffffff8082111561025c5761025c61021a565b604051601f8301601f19908116603f011681019082821181831017156102845761028461021a565b8160405283815286602085880101111561029d57600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000806000606084860312156102d257600080fd5b833567ffffffffffffffff808211156102ea57600080fd5b6102f687838801610230565b9450602086013591508082111561030c57600080fd5b5061031986828701610230565b925050604084013590509250925092565b60006020828403121561033c57600080fd5b5035919050565b6000815180845260005b818110156103695760208185018101518683018201520161034d565b506000602082860101526020601f19601f83011685010191505092915050565b60408152600061039c6040830185610343565b82810360208401526103ae8185610343565b9594505050505056fea264697066735822122068f81e6d8ca922bcf264733bd5a96e5a05a605f4e6b29cac81fa17df46628c0264736f6c63430008140033",
  "linkReferences": {},
  "deployedLinkReferences": {}
}

declare module "@nomicfoundation/hardhat-viem/types" {
  export function deployContract(
    contractName: "TokenFactory",
    constructorArgs: [_master: AbiParameterToPrimitiveType<{"name":"_master","type":"address"}>],
    config?: DeployContractConfig
  ): Promise<GetContractReturnType<TokenFactory$Type["abi"]>>;
  export function deployContract(
    contractName: "contracts/TokenFactory.sol:TokenFactory",
    constructorArgs: [_master: AbiParameterToPrimitiveType<{"name":"_master","type":"address"}>],
    config?: DeployContractConfig
  ): Promise<GetContractReturnType<TokenFactory$Type["abi"]>>;

  export function sendDeploymentTransaction(
    contractName: "TokenFactory",
    constructorArgs: [_master: AbiParameterToPrimitiveType<{"name":"_master","type":"address"}>],
    config?: SendDeploymentTransactionConfig
  ): Promise<{
    contract: GetContractReturnType<TokenFactory$Type["abi"]>;
    deploymentTransaction: GetTransactionReturnType;
  }>;
  export function sendDeploymentTransaction(
    contractName: "contracts/TokenFactory.sol:TokenFactory",
    constructorArgs: [_master: AbiParameterToPrimitiveType<{"name":"_master","type":"address"}>],
    config?: SendDeploymentTransactionConfig
  ): Promise<{
    contract: GetContractReturnType<TokenFactory$Type["abi"]>;
    deploymentTransaction: GetTransactionReturnType;
  }>;

  export function getContractAt(
    contractName: "TokenFactory",
    address: Address,
    config?: GetContractAtConfig
  ): Promise<GetContractReturnType<TokenFactory$Type["abi"]>>;
  export function getContractAt(
    contractName: "contracts/TokenFactory.sol:TokenFactory",
    address: Address,
    config?: GetContractAtConfig
  ): Promise<GetContractReturnType<TokenFactory$Type["abi"]>>;
}
